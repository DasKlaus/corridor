Entwicklung einer interaktiven Datenvisualisierung für medizinische Studien

Projektdokumentation der betrieblichen Projektarbeit von
Claudia Rössel

Im Ausbildungsberuf Fachinformatiker für Anwendungsentwicklung

Betrieb: extern
Ausführungszeit: 16.5.2016 - 4.6.2016


### Ausgangssituation (15)

#Projektumfeld
Diese Projektarbeit entsteht im Rahmen der externen, d.h. nicht im Rahmen einer Berufsausbildung stattfindenden, Prüfung zum Fachinformatiker für Anwendungsentwicklung. Der Autor ist jedoch seit [xy] in diesem Beruf bei der BioArtProducts GmbH regulär, also ohne ein Ausbildungsverhältnis, angestellt. Aus diesem Grunde wurde sich dafür entschieden, ein Projekt zur späteren Nutzung im Betrieb einzureichen, und dieses in Absprache mit dem Arbeitgeber in der Arbeitszeit durchzuführen.

Unternehmen
Die BioArtProducts GmbH ist Dienstleister für medizinische und pharmazeutische Unternehmen und entwickelt u.a. Software zur Datenerfassung, -verarbeitung und -auswertung, z.B. für medizinische oder pharmazeutische Studien oder Register. Die Auswertung dieser Daten erfolgt meist eng an Kundenvorgaben orientiert in unterschiedlichen Ausgabemedien, eine häufig wiederkehrende Anforderung ist jedoch die Darstellung des Datenbestandes als Diagramme. Die gebräuchlichsten Diagrammtypen können allerdings nur die Verteilung einzelner Werte (Balkendiagramm, Tortendiagramm) oder den Zusammenhang zwischen zwei Werten visualisieren. Die erfassten Daten zeigen sich im Gegensatz dazu in der Regel komplexer; so werden von Patienten üblicherweise Daten aus der Krankengeschichte, Medikamente, Risikofaktoren und bestehende Erkrankungen neben einer Vielzahl von Laborwerten erfasst. Diese Daten werden bislang nur selektiv auf Zusammenhänge hin untersucht, ein schneller Überblick über die Zusammenhänge ist nicht möglich. Hier soll diese Projektarbeit Abhilfe schaffen.

#Prozessschnittstellen
Für die Diagrammerstellung kommt in der BioArtProducts GmbH die JavaScript-Bibliothek d3 [Quelle, Fußnote] zum Einsatz. Mit dieser ist seit geraumer Zeit eine Sammlung dynamischer Funktionen in Entwicklung, die ein Konfigurationsobjekt und Daten im Json-Format entgegennehmen, und den Angaben im Konfigurationsobjekt entsprechend Daten aggregieren, zählen und darstellen. Eine Anbindung an diese Funktionen ist gewünscht und soll dadurch realisiert werden, dass in der Oberfläche dieser Arbeit Spalten des Datenbestandes und die Form der Visualisierung ausgewählt, sowie optionale Konfigurationsparameter, wie z.B. Wertebereich, Diagrammtyp, Zuordnung der Daten zu Achsen, übergeben werden können. Dementsprechend soll das Programm die gewählten Daten vorbereiten und die entsprechende Funktion aufrufen, um ein Diagramm zu generieren.

Die Daten, die das im Rahmen dieser Projektarbeit entwickelte Programm nachempfindet, sollen im Json-Format entgegengenommen werden. Dies passiert durch Zuweisung einer Variable [Parameter für init], üblicherweise durch ein zugrundeliegendes Java-Backend, in das es eingebettet wird. Zum Testen und Präsentieren müssen jedoch Beispieldaten erzeugt werden, die von ihrer Art denen, die in Projekten der BioArtProducts GmbH erfasst werden, nachempfunden sind.

#Projektziel
Ziel ist eine Visualisierung, die Kunden sowie potentiellen Kunden der BioArtProducts GmbH angeboten, und die in bereits bestehende Projekte mit geringem Aufwand eingebunden werden kann. Sie soll Auftraggebern von Studien und Registern, aber auch Ärzten und Schwestern, die für diese Studien und Register Daten erfassen, einen schnellen und interaktiven Überblick über den Datenbestand und Abhängigkeiten zwischen einzelnen Variablen bieten und als Vorstufe zur Erstellung von Diagrammen, die eine oder zwei Spalten des Datenbestands betrachten, dienen.

Die Visualisierung erfolgt in Form von Säulen, die die jeweilig erfassten Daten als Punktwolke ("beeswarm plot") darstellen - eine Säule für jede pro Datensatz erfasste Spalte. Für Zahlenwerte wird eine lineare, für Strings eine gewichtete Ordinalskala (Werteblöcke, deren Höhe abhängig von der Häufigkeit des jeweiligen Wertes sind) verwendet. Jede Spalte soll dabei frei konfigurierbar bezüglich ihres angezeigten Wertebereichs sein. Auch soll es möglich sein, Grenzwerte zu kennzeichnen. Auf diese Weise lassen sich bereits die jeweiligen Werte und ihre Verteilung im Datenbestand auf einen Blick beurteilen. Nun lassen sich interaktiv einzelne Einträge (i.d.R. Patienten) hervorheben, indem der Mauszeiger über einen Punkt bewegt wird - dieser sowie korrespondierende Punkte anderer Spalten werden dann hervorgehoben. Über Schieberegler am vertikalen Ende der Säulen können Wertebereiche eingegrenzt werden, außerhalb dessen Punkte als deaktiviert ausgegraut werden. Die Auswirkung einer Variablen auf alle anderen Werte kann so sichtbar gemacht werden.

Sind so Zusammenhänge offenbar worden, die genauer dargestellt werden sollen, können die betreffenden Spalten zu einer Auswahl hinzugefügt werden. Für die Darstellung dieser Spalten als Diagramm werden im Folgenden Konfigurationsdetails abgefragt: welche Achse welche Werte darstellen soll, die Art des Diagramms (Linien, Balken) und betrachteter Wertebereich. Dann lässt sich das entsprechende Diagramm generieren oder alternativ als Grafik speichern.
[Skizze, Entwurf]

#Kundenwünsche
Um die spätere Nutzung durch andere Mitarbeiter zu erleichtern, ist der Code vernünftig zu kommentieren und soll vergleichbar mit bisherigen d3-Anwendungen aufgebaut sein. Dazu gehört die konsistente Benennung von Variablen und Methoden in Englisch, Formatierung und Einrückungen nach Firmenstandard, die Verwendung eines Konfigurationsobjektes zur leichten Anpassung an projektspezifische Anforderungen und Design und die Trennung von Berechnungen und grafischer Darstellung. Die Nutzeroberfläche ist möglichst einfach zu halten, da sie je nach Projekt sehr unterschiedlich implementiert werden wird und unter Umständen auch vollkommen entfällt, um zum Beispiel eine im Code vorkonfigurierte, nicht änderbare Darstellung zu präsentieren.

Abhängigkeiten von anderen Bibliotheken und Tools sollen möglichst vermieden werden. Aus diesem Grund wurde, abweichend vom Projektantrag, sich gegen ein Farbmanagement entschieden. Die Darstellung erfolgt in Graustufen, ist jedoch leicht anpassbar und kann nach Bedarf erweitert werden.

#Teilaufgaben
Folgende Teilaufgaben wurden identifiziert:
 - Projektplanung
	Projektbeschreibung, Anforderungsanalyse, Absprachen im Unternehmen, grundlegende Architekturentscheidungen, Zeit-, Ressourcen- und Ablaufplanung
 - Erstellung von Beispieldaten
	Auswahl sinnvoller Spalten, Identifikation von Grenzwerten und üblicher Verteilung von Werten sowie die Generierung dieser Daten unter Berücksichtigung dieser Verteilung und Grenzwerte mit Formeln, die Abhängigkeiten zwischen den Werten beinhalten.
 - Säulendarstellung von Daten als beeswarm plot für Zahlen und Zeichenketten
	Iterative Platzierung von Datenpunkten in einem SVG-Graphen, dynamische Anpassung der Skala, Streuung der Punkte auf der X-Achse durch Kollisionserkennung, dynamische Anpassung des Punktradius entsprechend der Datendichte im Graphen, Performanzoptimierung und Tests all dieser Features.
 - Eingrenzung des betrachteten Wertebereichs von Säulen
	Gestaltung von Bedienelementen, Drag & Drop-Funktionalität von Bedienelementen, einfärben der eingegrenzten Zellen, Färben korrespondierender Zellen, Sicherstellen der Funktionalität bei Begrenzung mehrerer Spalten oder Begrenzung während des Zeichnens eines Graphen, Einrasten der Bedienelemente an Grenzwerte und Tests all dieser Features
 - Nutzeroberfläche erstellen
	Spalten zur Darstellung auswählen, variable Datenmengen generieren, Geschwindigkeit der Darstellung anpassen, Datenstruktur und Grenzwerte eingeben, Testen
 - Daten zur Diagrammerstellung vorbereiten
	Konfiguration erfassen, Daten gruppieren
 - Diagramme erstellen
	Diagramm zeichnen, speichern, Design, Testen
 - Projektarbeit und Kundendokumentation schreiben
	Projektarbeit entsprechend IHK-Bewertungsmatrix auf Grundlage von Planung, Kundendokumentation zweisprachig anlegen und in der Anwendung selbst anzeigen, Korrekturlesen

### Ressourcen- und Ablaufplanung (15)

#Ablaufplanung
Die Zeitplanung erfolgt entsprechend der Teilaufgaben.

Planung: 12h
Beispieldaten mit Abhängigkeiten: 4h
Spaltendarstellung (int, enum, float, array) (Skala, Verteilung, iterativ (Skala!), Radius, Kollision, Performanz, design) - Tests: 28h
Limits (drag & drop, Zellen färben, korrespondierende Zellen färben, nur entfärben wenn nirgendwo limitiert, Während Spaltenerzeugung (Skala!), snap to boundaries (Skala! Enum!), beidseitig, design) - Testen: 12h
Oberfläche (spalten hinzufügen, Daten generieren mit Anzahl, Geschwindigkeit, Spalten benennen/Einheiten/boundaries (dataStructure)) - Testen: 8h
Spalten zur Diagrammerstellung vorbereiten (Konfiguration erfassen, Daten gruppieren) - Testen: 6h
Diagramm erstellen (malen, speichern, design) - Testen: 4h
Projektarbeit schreiben - Korrekturlesen: 12h
Kundendokumentation (Anleitung, zweisprachig, design) - Korrekturlesen: 2h

Gesamt: 80h

[dingsdiagramm mit kritischem Pfad etc]

Der Durchführungszeitraum streckt sich (entgegen den Angaben im Projektantrag) auf drei Wochen statt auf zwei, da die Projektarbeit in der Arbeitszeit des Anstellungsverhältnisses bei der BioArtProducts GmbH erstellt wird, und die vertragliche Arbeitszeit nur 25 Stunden pro Woche umfasst. Der Zeitraum selbst wurde aufgrund hoher Aufgabenlast im beantragten Zeitraum (18.-29.04.2016) und mit Rücksicht auf die notwendige Vorbereitung auf die schriftliche Abschlussprüfung am [] auf die drei Wochen vor dem durch die IHK bestimmten Abgabetermin am 06.06.2016 gelegt.

Der Ablaufplan gestaltet sich daher wie folgt:

[dingsablaufplan?]

#Ressourcenplanung
Die Projektarbeit wird am Laptoparbeitsplatz mit Linux Ubuntu 14.04 der BioArtProducts GmbH durchgeführt. Versionskontrolle erfolgt mit git, Code und Dokumentation werden im Texteditor gedit 3.10.4 geschrieben. Die Endfassung der Projektdokumentation wird mit Libre Office erstellt, Grafiken für die Dokumentation werden in InkScape 0.48 gestaltet. Für die Durchführung der Arbeit müssen weder Hard- noch Software angeschafft werden. 

#kostenplanung
Die Kosten des Projekts liegen ausschließlich im Personalbereich, d.h. der Bereitstellung eines Arbeitsplatzes mit entsprechenden Arbeitsmitteln sowie Lohnzahlungen.
Zur Ermittlung der Anforderungen wurden im Vorfeld und in der Planungsphase Mitarbeitergespräche geführt. Zwischenstände sollen präsentiert und durch Kollegen getestet werden und zur Qualitätssicherung wird es Code Reviews geben. Daher schlüsseln sich die Kosten folgendermaßen auf:

Entwicklungskosten	Antragsteller	80h	Personal	Ressourcen	Gesamt
Mitarbeitergespräche zur Vorbereitung und Anforderungsanalyse	Mitarbeiter	4h
Code-Review und Tests	Mitarbeiter	4h

Für einen Mitarbeiter wird ein Stundensatz von 25€ angenommen. Ressourcenkosten für den Arbeitsplatz liegen bei schätzungsweise 15 pro Stunde.

### Durchführung und Auftragsbearbeitung (30)

Planung: 12h
Beispieldaten mit Abhängigkeiten: 4h
Spaltendarstellung (int, enum, float, array) (Skala, Verteilung, iterativ (Skala!), Radius, Kollision, Performanz, design) - Tests: 28h
Limits (drag & drop, Zellen färben, korrespondierende Zellen färben, nur entfärben wenn nirgendwo limitiert, Während Spaltenerzeugung (Skala!), snap to boundaries (Skala! Enum!), beidseitig, design) - Testen: 12h
Oberfläche (spalten hinzufügen, Daten generieren mit Anzahl, Geschwindigkeit, Spalten benennen/Einheiten/boundaries (dataStructure)) - Testen: 8h
Spalten zur Diagrammerstellung vorbereiten (Konfiguration erfassen, Daten gruppieren) - Testen: 6h
Diagramm erstellen (malen, speichern, design) - Testen: 4h
Projektarbeit schreiben - Korrekturlesen: 12h
Kundendokumentation (Anleitung, zweisprachig, design) - Korrekturlesen: 2h

### Projektergebnisse (15)

### Gestaltung des Projektes (15)

### Kundendokumentation (10)


